{"version":3,"file":"time-picker.component.js","sourceRoot":"","sources":["../../../src/reactive-form/time-picker/time-picker.component.ts"],"names":[],"mappings":"OAAO,EAAE,SAAS,EAAU,KAAK,EAAa,MAAM,eAAe;OAC5D,EAAa,UAAU,EAAE,MAAM,gBAAgB;AAMtD;IAAA;IA2CA,CAAC;IAnCC,sCAAQ,GAAR;QAAA,iBAcC;QAbC,IAAI,UAAU,GAAU,EAAE,CAAA;QAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC;YAC/B,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;QAE/C,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,uEAAuE,CAAC,CAAC,CAAA;QAE5G,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,CAAA;QAE5C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAA;QAExD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,UAAA,KAAK;YACxD,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAA;QACrC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;YACX,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAA;IAC1B,CAAC;IACI,8BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,gBAAgB;oBAC1B,WAAW,EAAE,8BAA8B;oBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;iBAC5C,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,kCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,kCAAc,GAA2C;QAChE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC3B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC3B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KAC5B,CAAC;IACF,0BAAC;AAAD,CAAC,AA3CD,IA2CC","sourcesContent":["import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\n\nimport { Subscription } from 'rxjs'\nimport * as moment from 'moment'\n\n\nexport class TimePickerComponent implements OnInit, OnDestroy {\n\n   group: FormGroup\n   field: any\n   request: any\n\n  private sub: Subscription\n\n  ngOnInit(): void {\n    let validators: any[] = []\n    if (this.field.control.validator)\n      validators.push(this.field.control.validator)\n\n    validators.push(Validators.pattern(/^(00|0[0-9]|1[0-9]|2[0-3]):(0[0-9]|[0-5][0-9])(:([0-9]|[0-5][0-9]))?$/))\n\n    this.field.control.setValidators(validators)\n\n    this.field.control.setValue(this.request[this.field.id])\n\n    this.sub = this.field.control.valueChanges.subscribe(value => {\n      this.request[this.field.id] = value\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub)\n      this.sub.unsubscribe()\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'tw-time-picker',\n  templateUrl: './time-picker.component.html',\n  styleUrls: ['./time-picker.component.scss']\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'group': [{ type: Input },],\n'field': [{ type: Input },],\n'request': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}