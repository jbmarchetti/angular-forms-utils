{"version":3,"file":"date-picker.component.js","sourceRoot":"","sources":["../../../src/reactive-form/date-picker/date-picker.component.ts"],"names":[],"mappings":"OAAO,EAAE,SAAS,EAAU,KAAK,EAAa,MAAM,eAAe;OAC5D,EAAa,UAAU,EAAE,MAAM,gBAAgB;OAG/C,KAAK,MAAM,MAAM,QAAQ;AAGhC;IAAA;IA+CA,CAAC;IAvCC,sCAAQ,GAAR;QAAA,iBAaC;QAZC,IAAI,UAAU,GAAU,EAAE,CAAA;QAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC;YAC/B,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;QAE/C,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,uDAAuD,CAAC,CAAC,CAAA;QAE5F,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,CAAA;QAE5C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,UAAA,KAAK;YACxD,EAAE,CAAC,CAAC,KAAK,CAAC;gBACR,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAA;QACpE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;YACX,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAA;IAC1B,CAAC;IACI,8BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,+TAMT;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,kCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,kCAAc,GAA2C;QAChE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC3B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC3B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KAC5B,CAAC;IACF,0BAAC;AAAD,CAAC,AA/CD,IA+CC","sourcesContent":["import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\n\nimport { Subscription } from 'rxjs'\nimport * as moment from 'moment'\n\n\nexport class DatePickerComponent implements OnInit, OnDestroy {\n\n   group: FormGroup\n   field: any\n   request: any\n\n  private sub: Subscription\n\n  ngOnInit(): void {\n    let validators: any[] = []\n    if (this.field.control.validator)\n      validators.push(this.field.control.validator)\n\n    validators.push(Validators.pattern(/^\\d\\d\\d\\d-(0?[1-9]|1[0-2])-(0?[1-9]|[12][0-9]|3[01])$/))\n\n    this.field.control.setValidators(validators)\n\n    this.sub = this.field.control.valueChanges.subscribe(value => {\n      if (value)\n        this.request[this.field.id] = moment(value).format('YYYY-MM-DD')\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub)\n      this.sub.unsubscribe()\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'tw-date-picker',\n  template: `\n  <div [formGroup]='group'>\n   <input [formControlName]='field.id' name='{{field.id}}'  class='form-control' ng2-datetime-picker\n      close-on-select=\"false\" date-only=\"true\" />\n  <small class='text-danger' *ngIf='field.control.value && field.control.invalid'>Invalid Format : YYYY-MM-DD</small>\n</div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'group': [{ type: Input },],\n'field': [{ type: Input },],\n'request': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}